# This file is part of the CampaignChain package.
#
# (c) CampaignChain, Inc. <info@campaignchain.com>
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.

parameters:

    campaignchain_core:
        display_name: 'Core Bundle'
        formats:
            # Date and time formats as per http://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
            date:
              - 'yyyy-MM-dd'
              - 'd. MMMM, yyyy'
              - 'EEEE, d. MMMM, yyyy'
              - 'EEE, d. MMMM, yyyy'
            time:
              - 'hh:mm a'
              - 'HH:mm'
              - 'HH:mm:ss'

    # tell twig to use our own exception controller
    twig.exception_listener.controller: 'campaignchain.core.controller.exception:showAction'

    # Defaults for these are set by CampaignChainCoreExtension
    campaignchain.core.upload_storage.path: ~
    campaignchain.core.upload_storage.url_prefix: ~

services:

    # Wizard
    campaignchain.core.channel.wizard:
        class: CampaignChain\CoreBundle\Wizard\ChannelWizard
        calls:
            - [setContainer, ['@service_container']]

    campaignchain.core.activity.wizard:
        class: CampaignChain\CoreBundle\Wizard\ActivityWizard
        calls:
            - [setContainer, ['@service_container']]

    # Twig
    campaignchain.core.twig.campaignchain_core_extension:
        class: CampaignChain\CoreBundle\Twig\CampaignChainCoreExtension
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'
        tags:
            - { name: twig.extension }

    # Listeners
    campaignchain.core.listener.login:
        class: CampaignChain\CoreBundle\EventListener\LoginListener
        arguments:
            - '@security.token_storage'
            - '@security.authorization_checker'
            - '@session'
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onSecurityInteractiveLogin }
            - { name: kernel.event_listener, event: kernel.request, method: setLocale }

    campaignchain.core.listener.firstlogin:
        class: CampaignChain\CoreBundle\EventListener\FirstLoginListener
        tags:
            - { name: kernel.event_subscriber }

    campaignchain.core.listener.entry_point:
        class: CampaignChain\CoreBundle\EventListener\EntryPoint
        arguments: [ @router ]

    campaignchain.core.listener.datetime:
        class: CampaignChain\CoreBundle\EventListener\DatetimeListener
        arguments:
            - '@service_container'
        tags:
            - { name: doctrine.event_listener, event: postLoad }
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }

    campaignchain.core.listener.doctrine.meta:
        class: CampaignChain\CoreBundle\EventListener\DoctrineMetaListener
        tags:
            - { name: doctrine.event_listener, event: onFlush }

    campaignchain.core.listener.user_avatar:
        class: CampaignChain\CoreBundle\EventListener\UserAvatarListener
        arguments:
            - '@campaignchain.core.user'
            - '@campaignchain.core.service.file_upload'
            - '@liip_imagine.filter.manager'
        tags:
            - { name: doctrine.orm.entity_listener }
            - { name: kernel.event_listener, event: oneup_uploader.post_persist, method: onUpload }

    campaignchain.core.listener.hook:
        class: CampaignChain\CoreBundle\EventListener\HookListener
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'

    campaignchain.core.listener.console_exception:
        class: CampaignChain\CoreBundle\EventListener\ConsoleExceptionListener
        arguments:
            logger: '@monolog.logger.scheduler'
            entityManager: '@doctrine.orm.default_entity_manager'
        tags:
            - { name: kernel.event_listener, event: console.exception }

    campaign_chain_core.listener.external_exception:
        class: CampaignChain\CoreBundle\EventListener\ExternalExceptionListener
        arguments:
            - '@monolog.logger.external'
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    campaign_chain_core.listener.password_reset:
        class: CampaignChain\CoreBundle\EventListener\PasswordResetListener
        arguments: ['@router']
        tags:
            - { name: kernel.event_subscriber }

    campaign_chain_core.listener.user_date_time:
        class: CampaignChain\CoreBundle\EventListener\UserDateTimeListener
        tags:
            - { name: kernel.event_subscriber }

    # Services
    campaignchain.core.module:
        class: CampaignChain\CoreBundle\EntityService\ModuleService
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'

    campaignchain.core.location:
        class: CampaignChain\CoreBundle\EntityService\LocationService
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'
            - '@campaignchain.core.activity'

    campaignchain.core.fact:
        class: CampaignChain\CoreBundle\EntityService\FactService
        arguments:
            - '@doctrine.orm.entity_manager'

    campaignchain.core.channel:
        class: CampaignChain\CoreBundle\EntityService\ChannelService
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'
            - '@campaignchain.core.activity'
            - '@campaignchain.core.location'

    campaignchain.core.operation:
        class: CampaignChain\CoreBundle\EntityService\OperationService
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'

    campaignchain.core.campaign:
        class: CampaignChain\CoreBundle\EntityService\CampaignService
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'
            - '@campaignchain.core.serializer.default'

    campaignchain.core.milestone:
        class: CampaignChain\CoreBundle\EntityService\MilestoneService
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'

    campaignchain.core.activity:
        class: CampaignChain\CoreBundle\EntityService\ActivityService
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'

    campaignchain.core.hook:
        class: CampaignChain\CoreBundle\EntityService\HookService
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'

    campaignchain.core.cta:
        class: CampaignChain\CoreBundle\EntityService\CTAService
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@campaign_chain_core.service.url_shortener'
            - '@campaignchain.core.location'

    campaignchain.core.user:
        class: CampaignChain\CoreBundle\EntityService\UserService
        arguments:
            - '@campaignchain.core.service.file_upload'
            - '@campaignchain.core.http_client'

    campaignchain.core.system:
        class: CampaignChain\CoreBundle\EntityService\SystemService
        arguments:
            - '@doctrine.orm.entity_manager'

    campaign_chain_core.service.url_shortener:
        class: CampaignChain\CoreBundle\Service\UrlShortener\UrlShortenerService
        arguments:
            - '@mremi.url_shortener.provider.bitly.bitly_provider'

    # Forms
    campaignchain.core.form.type.campaign:
        class: CampaignChain\CoreBundle\Form\Type\CampaignType
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'

    campaignchain.core.form.type.milestone:
        class: CampaignChain\CoreBundle\Form\Type\MilestoneType
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'

    campaignchain.core.form.type.location:
        class: CampaignChain\CoreBundle\Form\Type\LocationType
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'

    campaignchain.core.form.type.user:
        class: CampaignChain\CoreBundle\Form\Type\UserType
        arguments:
            - '%campaignchain_core%'
        tags:
            - { name: form.type, alias: campaignchain_core_user }

    campaignchain.core.form.type.activity:
        class: CampaignChain\CoreBundle\Form\Type\ActivityType
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'

    campaignchain.core.form.type.datetime:
        class: CampaignChain\CoreBundle\Form\Type\DateTimeType
        arguments:
            - '@campaignchain.core.util.datetime'
        tags:
            - { name: form.type, alias: campaignchain_datetime }

    campaignchain.core.form.type.datetimepicker:
        class: CampaignChain\CoreBundle\Form\Type\DateTimePickerType
        arguments:
            - '@campaignchain.core.util.datetime'
        tags:
            - { name: form.type, alias: campaignchain_datetimepicker }

    campaignchain.core.form.type.daterangepicker:
        class: CampaignChain\CoreBundle\Form\Type\DateRangePickerType
        tags:
            - { name: form.type, alias: campaignchain_daterangepicker }

    # Model
    campaignchain.core.model.dhtmlxgantt:
        class: CampaignChain\CoreBundle\Model\DhtmlxGantt
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'
            - '@campaignchain.core.serializer.default'

    campaignchain.core.model.fullcalendar:
        class: CampaignChain\CoreBundle\Model\FullCalendar
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@service_container'
            - '@campaignchain.core.serializer.default'

    # Sonata
    campaignchain.block.campaign.ongoing.listgroup:
        class: CampaignChain\CoreBundle\Block\CampaignOngoingListGroupBlockService
        arguments:
            - 'campaignchain.block.campaign.ongoing.listgroup'
            - '@templating'
        calls:
            - [setService, ['@campaignchain.core.campaign']]
        tags:
            - { name: sonata.block }

    campaignchain.block.activity.upcoming.listgroup:
        class: CampaignChain\CoreBundle\Block\ActivityUpcomingListGroupBlockService
        arguments:
            - 'campaignchain.block.activity.upcoming.listgroup'
            - '@templating'
        calls:
            - [setService, ['@campaignchain.core.activity']]
        tags:
            - { name: sonata.block }

    campaignchain.block.milestone.upcoming.listgroup:
        class: CampaignChain\CoreBundle\Block\MilestoneUpcomingListGroupBlockService
        arguments:
            - 'campaignchain.block.milestone.upcoming.listgroup'
            - '@templating'
        calls:
            - [ setService, ['@campaignchain.core.milestone']]
        tags:
            - { name: sonata.block }

    campaignchain.block.rss:
        class: CampaignChain\CoreBundle\Block\RssBlockService
        arguments:
            - 'campaignchain.block.rss'
            - '@templating'
        tags:
            - { name: sonata.block }

    # Install Wizard
    campaignchain.core.install.wizard:
        class: CampaignChain\CoreBundle\Wizard\InstallWizard
        arguments:
            - '%kernel.root_dir%'

    campaignchain.core.install.wizard.step.system_modules:
        class: CampaignChain\CoreBundle\Wizard\Install\Step\SystemModulesStep
        public: false
        calls:
            - [setServices, ['@campaignchain.core.util.command', '@campaignchain.core.module.installer']]
        tags:
            - { name: campaignchain.install.step, priority: 0 }

    campaignchain.core.install.wizard.step.sfsecret:
        class: CampaignChain\CoreBundle\Wizard\Install\Step\SfSecretStep
        public: false
        tags:
            - { name: campaignchain.install.step, priority: 100 }

    campaignchain.core.install.wizard.step.bitly:
        class: CampaignChain\CoreBundle\Wizard\Install\Step\BitlyStep
        public: false
        calls:
            - [setServices, ['@campaignchain.core.util.command']]
        tags:
            - { name: campaignchain.install.step, priority: 200 }

    campaignchain.core.install.wizard.step.admin:
        class: CampaignChain\CoreBundle\Wizard\Install\Step\AdminStep
        public: false
        calls:
            - [setServices, ['@campaignchain.core.util.command']]
        tags:
            - { name: campaignchain.install.step, priority: 300 }

    # Voter
    campaignchain.core.voter.install:
        class: CampaignChain\CoreBundle\Security\Authorization\Voter\InstallVoter
        public: false
        arguments:
            - '@doctrine.orm.entity_manager'
        tags:
            - { name: security.voter }

    campaignchain.core.voter.dev:
        class: CampaignChain\CoreBundle\Security\Authorization\Voter\DevVoter
        public: false
        arguments:
            - '%campaignchain_dev%'
        tags:
            - { name: security.voter }

    # Modules
    campaignchain.core.module.bundle:
            class: CampaignChain\CoreBundle\Module\BundleConfig
            arguments:
                - '@campaignchain.core.module.locator'
                - '@doctrine.orm.default_entity_manager'

    campaignchain.core.module.locator:
        class: CampaignChain\CoreBundle\Module\BundleLocator
        arguments:
            - '%kernel.root_dir%'
            - '@campaignchain.core.module.package'

    campaignchain.core.module.installer:
        class: CampaignChain\CoreBundle\Module\Installer
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@campaignchain.core.module.bundle'
            - '%kernel.root_dir%'
            - '@campaignchain.core.system'
            - '@campaignchain.core.module.kernel'
            - '@campaignchain.core.module.package'
            - '@campaignchain.core.util.command'
            - '@campaignchain.core.module.repository'
            - '@logger'

    campaignchain.core.module.package:
        class: CampaignChain\CoreBundle\Module\Package
        arguments:
            - '%kernel.root_dir%'
            - '%campaignchain_dev%'

    campaignchain.core.module.repository:
        class: CampaignChain\CoreBundle\Module\Repository
        arguments:
            - '@campaignchain.core.system'
            - '%campaignchain_dev%'

    campaignchain.core.module.composer:
        class: CampaignChain\CoreBundle\Module\Composer
        arguments:
            - '%kernel.root_dir%'
            - '@campaignchain.core.util.command'
            - '@logger'

    campaignchain.core.module.kernel:
        class: CampaignChain\CoreBundle\Module\Kernel
        arguments:
            - '%kernel.root_dir%'

    # Menu
    campaignchain.core.menu.list_group_renderer:
        class: Knp\Menu\Renderer\TwigRenderer
        arguments:
            - '@twig'
            - 'CampaignChainCoreBundle:Menu:list_group_theme.html.twig'
            - '@knp_menu.matcher'
        tags:
            - { name: knp_menu.renderer, alias: list-group }

    campaignchain.core.menu.dropdown_renderer:
        class: Knp\Menu\Renderer\TwigRenderer
        arguments:
            - '@twig'
            - 'CampaignChainCoreBundle:Menu:dropdown_theme.html.twig'
            - '@knp_menu.matcher'
        tags:
            - { name: knp_menu.renderer, alias: dropdown }

    # Serializer
    campaignchain.core.serializer.encoder.json:
        class: 'Symfony\Component\Serializer\Encoder\JsonEncoder'

    campaignchain.core.serializer.normalizer.getsetmethod:
        class: 'Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer'

    campaignchain.core.serializer.default:
        class: 'Symfony\Component\Serializer\Serializer'
        arguments:
            0:
                - '@campaignchain.core.serializer.normalizer.getsetmethod'
            1:
                - '@campaignchain.core.serializer.encoder.json'

    # Logger
    campaignchain.core.monolog_psr_processor:
        class: Monolog\Processor\PsrLogMessageProcessor
        tags:
          - { name: monolog.processor }

    # Exception
    campaignchain.core.controller.exception:
        class: CampaignChain\CoreBundle\Controller\ExceptionController
        arguments:
            - '@twig'
            - '%kernel.debug%'

    # Utility
    campaignchain.core.service.file_upload:
        class: CampaignChain\CoreBundle\Service\FileUploadService
        arguments:
            - '%campaignchain.core.upload_storage.path%'
            - '%campaignchain.core.upload_storage.url_prefix%'
            - '@gaufrette.images_filesystem'
            - '@liip_imagine.cache.manager'

    campaignchain.core.util.datetime:
        class: CampaignChain\CoreBundle\Util\DateTimeUtil
        arguments:
            - '@service_container'

    campaignchain.core.util.command:
        class: CampaignChain\CoreBundle\Util\CommandUtil
        arguments:
            - '@kernel'

    # Fixtures aka sample data
    campaignchain.core.fixture:
        class: CampaignChain\CoreBundle\Fixture\FileLoader
        arguments:
            - '@campaignchain.core.user'
            - '@h4cc_alice_fixtures.manager'
            - '@doctrine.orm.default_entity_manager'
            - '@liip_imagine.mime_type_guesser'
            - '@liip_imagine.extension_guesser'

    # External
    mremi.url_shortener.provider.bitly.bitly_provider:
        class: Mremi\UrlShortener\Provider\Bitly\BitlyProvider
        arguments:
            - '@mremi.url_shortener.provider.bitly.generic_access_token_authenticator'

    mremi.url_shortener.provider.bitly.generic_access_token_authenticator:
        class: Mremi\UrlShortener\Provider\Bitly\GenericAccessTokenAuthenticator
        arguments:
            - '@=service("campaignchain.core.system").getBitlyAccessToken()'

    fos_user.doctrine_registry:
        alias: doctrine

    campaignchain.core.http_client:
        class: GuzzleHttp\Client
