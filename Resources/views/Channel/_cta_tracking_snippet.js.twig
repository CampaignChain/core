{#
Copyright 2016 CampaignChain, Inc. <info@campaignchain.com>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
#}

/**
 * Based on Google's snippet for Google Analytics:
 * https://developers.google.com/analytics/devguides/collection/analyticsjs/tracking-snippet-reference
 *
 * Creates a temporary global cc object and loads tracking.js.
 * Parameters o, a, and m are all used internally. They could have been
 * declared using 'var', instead they are declared as parameters to save
 * 4 bytes ('var ').
 *
 * @param {Window}        i The global context object.
 * @param {HTMLDocument}  s The DOM document object.
 * @param {string}        o Must be 'script'.
 * @param {string}        g Protocol relative URL of the analytics.js script.
 * @param {string}        r Global name of analytics object. Defaults to 'ga'.
 * @param {HTMLElement}   a Async script tag.
 * @param {HTMLElement}   m First script tag in document.
 */
(function(i, s, o, g, r, a, m){
    i['CampaignChainObject'] = r; // Acts as a pointer to support renaming.

    // Creates an initial ga() function.
    // The queued commands will be executed once analytics.js loads.
    i[r] = i[r] || function() {
                (i[r].q = i[r].q || []).push(arguments)
            },

            // Sets the time (as an integer) this tag was executed.
            // Used for timing hits.
            i[r].l = 1 * new Date();

    // Insert the script tag asynchronously.
    // Inserts above current tag to prevent blocking in addition to using the
    // async attribute.
    a = s.createElement(o),
            m = s.getElementsByTagName(o)[0];
    a.async = 1;
    a.src = g;
    m.parentNode.insertBefore(a, m)
})(window, document, 'script', '//{{ app.request.httpHost()|raw }}{{ tracking_js_route|raw }}', '{{ tracking_js_init|raw }}');

// Creates a default tracker with the Channel ID.
{{ tracking_js_init|raw }}('{{ channel.trackingId }}');